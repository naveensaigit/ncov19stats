'''
Other parameters which fit a good model as well
beta, gamma, delta = 0.205, 1./11, 0.0055 dRdt=0.5*gamma*I
'''
def ret():
    import urllib.request, json 
    with urllib.request.urlopen("https://api.covid19india.org/data.json") as url:
        data = json.loads(url.read().decode())
        
    data=data['cases_time_series']

    dataval=[]
    for row in data:
        dataval.append(list(row.values()))
    import pandas as pd
    df=pd.DataFrame(dataval,columns=list(data[0].keys()))
    DaysElapsed=len(df)-1
    print(DaysElapsed)
    '''import numpy as np
    from scipy.integrate import odeint
    import math
    import datetime

    # Total population, N.
    N = 1.3e9
    # Initial number of infected, recovered and dead individuals, I0, R0 and D0.
    I0, R0, D0 = 1, 0, 0
    # Everyone else, S0, is susceptible to infection initially.
    S0 = N - I0 - R0 -D0
    # Contact rate(beta), mean recovery rate(gamma) (in 1/days) and death rate(alpha)
    beta, gamma, delta = 0.215, 1./20, 0.0031
    #No. of days later (predicted)
    Days=450
    stdate=np.datetime64('2020-01-30')
    enddate=datetime.datetime.utcnow().date()
    t=np.arange(stdate,stdate+Days)
    # A grid of time points (in days)
    t1 = np.linspace(0, Days, Days)

    # The SIR model differential equations.
    def deriv(y, t, N, beta, gamma, delta):
        S, I, R, D = y
        if t<=91:
            dSdt = -beta * math.exp(-t**1.05/200)* S * I / N
            dIdt = beta * math.exp(-t**1.05/200) *S * I / N - gamma * I - delta*I
        elif t>91 and t<=131:
            dSdt = -beta * math.exp(-t**1.1/200)* S * I / N
            dIdt = beta * math.exp(-t**1.1/200) *S * I / N - gamma * I - delta*I
        else:
            dSdt = -beta * math.exp(-t/350)* S * I / N
            dIdt = beta * math.exp(-t/350) *S * I / N - gamma * I - delta*I
        dRdt = 0.6*gamma*I
        dDdt = delta * I
        return dSdt, dIdt, dRdt, dDdt

    # Initial conditions vector
    y0 = S0, I0, R0, D0
    # Integrate the SIR equations over the time grid, t.
    ret = odeint(deriv, y0, t1, args=(N, beta, gamma, delta))
    S, I, R, D = ret.T'''

    I=list(map(int,[1.00000000e+00, 1.17554834e+00, 1.38036400e+00, 1.61898472e+00,
       1.89661882e+00, 2.21922278e+00, 2.59359660e+00, 3.02749086e+00,
       3.52972693e+00, 4.11033083e+00, 4.78068169e+00, 5.55367646e+00,
       6.44391225e+00, 7.46788781e+00, 8.64422565e+00, 9.99391700e+00,
       1.15405908e+01, 1.33108090e+01, 1.53343908e+01, 1.76447666e+01,
       2.02793651e+01, 2.32800357e+01, 2.66935079e+01, 3.05718914e+01,
       3.49732179e+01, 3.99620293e+01, 4.56100132e+01, 5.19966889e+01,
       5.92101480e+01, 6.73478507e+01, 7.65174814e+01, 8.68378668e+01,
       9.84399587e+01, 1.11467884e+02, 1.26080068e+02, 1.42450424e+02,
       1.60769628e+02, 1.81246461e+02, 2.04109242e+02, 2.29607331e+02,
       2.58012728e+02, 2.89621748e+02, 3.24756787e+02, 3.63768172e+02,
       4.07036101e+02, 4.54972672e+02, 5.08023993e+02, 5.66672386e+02,
       6.31438670e+02, 7.02884526e+02, 7.81614949e+02, 8.68280772e+02,
       9.63581257e+02, 1.06826677e+03, 1.18314150e+03, 1.30906625e+03,
       1.44696126e+03, 1.59780912e+03, 1.76265762e+03, 1.94262274e+03,
       2.13889156e+03, 2.35272523e+03, 2.58546192e+03, 2.83851971e+03,
       3.11339948e+03, 3.41168778e+03, 3.73505953e+03, 4.08528079e+03,
       4.46421126e+03, 4.87380681e+03, 5.31612181e+03, 5.79331128e+03,
       6.30763297e+03, 6.86144908e+03, 7.45722800e+03, 8.09754556e+03,
       8.78508625e+03, 9.52264403e+03, 1.03131229e+04, 1.11595372e+04,
       1.20650113e+04, 1.30327796e+04, 1.40661853e+04, 1.51686792e+04,
       1.63438185e+04, 1.75952644e+04, 1.89267797e+04, 2.03422257e+04,
       2.18455593e+04, 2.34408284e+04, 2.51321681e+04, 2.68347787e+04,
       2.82562880e+04, 2.97261904e+04, 3.12444892e+04, 3.28110840e+04,
       3.44257687e+04, 3.60882277e+04, 3.77980341e+04, 3.95546472e+04,
       4.13574108e+04, 4.32055517e+04, 4.50981789e+04, 4.70342829e+04,
       4.90127350e+04, 5.10322883e+04, 5.30915773e+04, 5.51891196e+04,
       5.73233172e+04, 5.94924581e+04, 6.16947188e+04, 6.39281667e+04,
       6.61907636e+04, 6.84803688e+04, 7.07947431e+04, 7.31315532e+04,
       7.54883760e+04, 7.78627038e+04, 8.02519494e+04, 8.26534520e+04,
       8.50644826e+04, 8.74822506e+04, 8.99039099e+04, 9.23265658e+04,
       9.47472813e+04, 9.71630847e+04, 9.95709763e+04, 1.01967936e+05,
       1.04350929e+05, 1.06716916e+05, 1.09062860e+05, 1.13813011e+05,
       1.25107513e+05, 1.37464442e+05, 1.50977873e+05, 1.65749648e+05,
       1.81889964e+05, 1.99518001e+05, 2.18762590e+05, 2.39762939e+05,
       2.62669384e+05, 2.87644210e+05, 3.14862507e+05, 3.44513096e+05,
       3.76799503e+05, 4.11940997e+05, 4.50173693e+05, 4.91751716e+05,
       5.36948435e+05, 5.86057780e+05, 6.39395620e+05, 6.97301224e+05,
       7.60138807e+05, 8.28299153e+05, 9.02201331e+05, 9.82294495e+05,
       1.06905978e+06, 1.16301227e+06, 1.26470312e+06, 1.37472169e+06,
       1.49369784e+06, 1.62230428e+06, 1.76125907e+06, 1.91132818e+06,
       2.07332810e+06, 2.24812865e+06, 2.43665576e+06, 2.63989443e+06,
       2.85889169e+06, 3.09475963e+06, 3.34867858e+06, 3.62190018e+06,
       3.91575058e+06, 4.23163363e+06, 4.57103405e+06, 4.93552052e+06,
       5.32674877e+06, 5.74646457e+06, 6.19650645e+06, 6.67880851e+06,
       7.19540270e+06, 7.74842104e+06, 8.34009747e+06, 8.97276917e+06,
       9.64887763e+06, 1.03709689e+07, 1.11416937e+07, 1.19638059e+07,
       1.28401614e+07, 1.37737149e+07, 1.47675164e+07, 1.58247065e+07,
       1.69485097e+07, 1.81422271e+07, 1.94092274e+07, 2.07529354e+07,
       2.21768202e+07, 2.36843795e+07, 2.52791236e+07, 2.69645562e+07,
       2.87441527e+07, 3.06213365e+07, 3.25994531e+07, 3.46817405e+07,
       3.68712982e+07, 3.91710524e+07, 4.15837200e+07, 4.41117691e+07,
       4.67573775e+07, 4.95223896e+07, 5.24082703e+07, 5.54160597e+07,
       5.85463236e+07, 6.17991074e+07, 6.51738865e+07, 6.86695197e+07,
       7.22842045e+07, 7.60154316e+07, 7.98599480e+07, 8.38137183e+07,
       8.78718964e+07, 9.20287995e+07, 9.62778911e+07, 1.00611772e+08,
       1.05022180e+08, 1.09499996e+08, 1.14035269e+08, 1.18617239e+08,
       1.23234383e+08, 1.27874468e+08, 1.32524608e+08, 1.37171346e+08,
       1.41800729e+08, 1.46398412e+08, 1.50949752e+08, 1.55439916e+08,
       1.59854000e+08, 1.64177144e+08, 1.68394654e+08, 1.72492119e+08,
       1.76455532e+08, 1.80271406e+08, 1.83926884e+08, 1.87409837e+08,
       1.90708965e+08, 1.93813879e+08, 1.96715173e+08, 1.99404488e+08,
       2.01874561e+08, 2.04119258e+08, 2.06133601e+08, 2.07913777e+08,
       2.09457133e+08, 2.10762168e+08, 2.11828500e+08, 2.12656837e+08,
       2.13248927e+08, 2.13607509e+08, 2.13736252e+08, 2.13639690e+08,
       2.13323151e+08, 2.12792689e+08, 2.12055003e+08, 2.11117365e+08,
       2.09987544e+08, 2.08673731e+08, 2.07184466e+08, 2.05528568e+08,
       2.03715065e+08, 2.01753135e+08, 1.99652040e+08, 1.97421076e+08,
       1.95069513e+08, 1.92606556e+08, 1.90041299e+08, 1.87382684e+08,
       1.84639470e+08, 1.81820203e+08, 1.78933188e+08, 1.75986470e+08,
       1.72987813e+08, 1.69944688e+08, 1.66864260e+08, 1.63753379e+08,
       1.60618575e+08, 1.57466053e+08, 1.54301697e+08, 1.51131063e+08,
       1.47959386e+08, 1.44791587e+08, 1.41632270e+08, 1.38485737e+08,
       1.35355993e+08, 1.32246750e+08, 1.29161445e+08, 1.26103240e+08,
       1.23075040e+08, 1.20079498e+08, 1.17119027e+08, 1.14195814e+08,
       1.11311826e+08, 1.08468822e+08, 1.05668367e+08, 1.02911838e+08,
       1.00200435e+08, 9.75351947e+07, 9.49169963e+07, 9.23465725e+07,
       8.98245186e+07, 8.73513020e+07, 8.49272703e+07, 8.25526589e+07,
       8.02275997e+07, 7.79521290e+07, 7.57261941e+07, 7.35496597e+07,
       7.14223155e+07, 6.93438822e+07, 6.73140168e+07, 6.53323184e+07,
       6.33983338e+07, 6.15115625e+07, 5.96714608e+07, 5.78774464e+07,
       5.61289032e+07, 5.44251843e+07, 5.27656160e+07, 5.11495013e+07,
       4.95761227e+07, 4.80447459e+07, 4.65546214e+07, 4.51049881e+07,
       4.36950754e+07, 4.23241050e+07, 4.09912932e+07, 3.96958529e+07,
       3.84369954e+07, 3.72139314e+07, 3.60258732e+07, 3.48720354e+07,
       3.37516368e+07, 3.26639008e+07, 3.16080568e+07, 3.05833413e+07,
       2.95889981e+07, 2.86242796e+07, 2.76884473e+07, 2.67807725e+07,
       2.59005363e+07, 2.50470307e+07, 2.42195589e+07, 2.34174351e+07,
       2.26399856e+07, 2.18865482e+07, 2.11564733e+07, 2.04491232e+07,
       1.97638728e+07, 1.91001096e+07, 1.84572336e+07, 1.78346573e+07,
       1.72318060e+07, 1.66481176e+07, 1.60830425e+07, 1.55360435e+07,
       1.50065961e+07, 1.44941878e+07, 1.39983186e+07, 1.35185005e+07,
       1.30542574e+07, 1.26051252e+07, 1.21706513e+07, 1.17503946e+07,
       1.13439255e+07, 1.09508255e+07, 1.05706869e+07, 1.02031130e+07,
       9.84771756e+06, 9.50412486e+06, 9.17196934e+06, 8.85089541e+06,
       8.54055733e+06, 8.24061896e+06, 7.95075356e+06, 7.67064360e+06,
       7.39998055e+06, 7.13846468e+06, 6.88580488e+06, 6.64171842e+06,
       6.40593079e+06, 6.17817549e+06, 5.95819386e+06, 5.74573483e+06,
       5.54055481e+06, 5.34241743e+06, 5.15109341e+06, 4.96636037e+06,
       4.78800261e+06, 4.61581100e+06, 4.44958275e+06, 4.28912128e+06,
       4.13423604e+06, 3.98474234e+06, 3.84046120e+06, 3.70121919e+06,
       3.56684829e+06, 3.43718570e+06, 3.31207376e+06, 3.19135973e+06,
       3.07489570e+06, 2.96253845e+06, 2.85414930e+06, 2.74959397e+06,
       2.64874248e+06, 2.55146900e+06, 2.45765177e+06, 2.36717290e+06,
       2.27991836e+06, 2.19577776e+06, 2.11464433e+06, 2.03641475e+06,
       1.96098909e+06, 1.88827067e+06, 1.81816598e+06, 1.75058459e+06,
       1.68543906e+06, 1.62264480e+06, 1.56212005e+06, 1.50378576e+06,
       1.44756549e+06, 1.39338535e+06, 1.34117393e+06, 1.29086219e+06,
       1.24238343e+06, 1.19567316e+06, 1.15066907e+06, 1.10731097e+06,
       1.06554068e+06, 1.02530201e+06, 9.86540658e+05, 9.49204176e+05,
       9.13241904e+05, 8.78604909e+05, 8.45245931e+05, 8.13119328e+05,
       7.82181021e+05, 7.52388453e+05, 7.23700527e+05, 6.96077565e+05,
       6.69481260e+05, 6.43874632e+05]))
    R=list(map(int,[0.00000000e+00, 3.26377634e-02, 7.09831220e-02, 1.15982666e-01,
       1.68729330e-01, 2.30483664e-01, 3.02697782e-01, 3.87042227e-01,
       4.85436341e-01, 6.00082487e-01, 7.33504418e-01, 8.88590395e-01,
       1.06864154e+00, 1.27742591e+00, 1.51923897e+00, 1.79897109e+00,
       2.12218271e+00, 2.49518804e+00, 2.92514805e+00, 3.42017363e+00,
       3.98943990e+00, 4.64331272e+00, 5.39348839e+00, 6.25314777e+00,
       7.23712613e+00, 8.36209989e+00, 9.64679184e+00, 1.11121961e+01,
       1.27818246e+01, 1.46819769e+01, 1.68420340e+01, 1.92947800e+01,
       2.20767514e+01, 2.52286174e+01, 2.87955928e+01, 3.28278850e+01,
       3.73811797e+01, 4.25171641e+01, 4.83040929e+01, 5.48173979e+01,
       6.21403449e+01, 7.03647388e+01, 7.95916814e+01, 8.99323831e+01,
       1.01509032e+02, 1.14455721e+02, 1.28919439e+02, 1.45061130e+02,
       1.63056809e+02, 1.83098760e+02, 2.05396799e+02, 2.30179618e+02,
       2.57696196e+02, 2.88217299e+02, 3.22037055e+02, 3.59474618e+02,
       4.00875909e+02, 4.46615447e+02, 4.97098267e+02, 5.52761927e+02,
       6.14078600e+02, 6.81557255e+02, 7.55745933e+02, 8.37234102e+02,
       9.26655105e+02, 1.02468869e+03, 1.13206364e+03, 1.24956044e+03,
       1.37801410e+03, 1.51831697e+03, 1.67142169e+03, 1.83834416e+03,
       2.02016664e+03, 2.21804082e+03, 2.43319101e+03, 2.66691735e+03,
       2.92059906e+03, 3.19569773e+03, 3.49376057e+03, 3.81642380e+03,
       4.16541592e+03, 4.54256102e+03, 4.94978206e+03, 5.38910418e+03,
       5.86265784e+03, 6.37268205e+03, 6.92152741e+03, 7.51165916e+03,
       8.14566008e+03, 8.82623331e+03, 9.55620500e+03, 1.03382578e+04,
       1.11663431e+04, 1.20378960e+04, 1.29543719e+04, 1.39172247e+04,
       1.49279035e+04, 1.59878500e+04, 1.70984942e+04, 1.82612521e+04,
       1.94775213e+04, 2.07486782e+04, 2.20760739e+04, 2.34610312e+04,
       2.49048406e+04, 2.64087569e+04, 2.79739957e+04, 2.96017296e+04,
       3.12930852e+04, 3.30491391e+04, 3.48709147e+04, 3.67593791e+04,
       3.87154396e+04, 4.07399408e+04, 4.28336612e+04, 4.49973107e+04,
       4.72315276e+04, 4.95368762e+04, 5.19138441e+04, 5.43628400e+04,
       5.68841917e+04, 5.94781437e+04, 6.21448560e+04, 6.48844021e+04,
       6.76967681e+04, 7.05818509e+04, 7.35394578e+04, 7.65693056e+04,
       7.96710199e+04, 8.28441353e+04, 8.60880946e+04, 8.94128135e+04,
       9.30020532e+04, 9.69466280e+04, 1.01279877e+05, 1.06038084e+05,
       1.11260719e+05, 1.16990697e+05, 1.23274659e+05, 1.30163278e+05,
       1.37711574e+05, 1.45979267e+05, 1.55031145e+05, 1.64937465e+05,
       1.75774380e+05, 1.87624397e+05, 2.00576863e+05, 2.14728497e+05,
       2.30183941e+05, 2.47056362e+05, 2.65468093e+05, 2.85551312e+05,
       3.07448768e+05, 3.31314555e+05, 3.57314939e+05, 3.85629233e+05,
       4.16450732e+05, 4.49987699e+05, 4.86464425e+05, 5.26122338e+05,
       5.69221192e+05, 6.16040314e+05, 6.66879936e+05, 7.22062590e+05,
       7.81934594e+05, 8.46867609e+05, 9.17260283e+05, 9.93539988e+05,
       1.07616463e+06, 1.16562458e+06, 1.26244465e+06, 1.36718621e+06,
       1.48044938e+06, 1.60287530e+06, 1.73514854e+06, 1.87799956e+06,
       2.03220728e+06, 2.19860178e+06, 2.37806696e+06, 2.57154349e+06,
       2.78003161e+06, 3.00459418e+06, 3.24635969e+06, 3.50652534e+06,
       3.78636017e+06, 4.08720819e+06, 4.41049155e+06, 4.75771365e+06,
       5.13046222e+06, 5.53041237e+06, 5.95932947e+06, 6.41907199e+06,
       6.91159409e+06, 7.43894806e+06, 8.00328648e+06, 8.60686410e+06,
       9.25203935e+06, 9.94127538e+06, 1.06771408e+07, 1.14623097e+07,
       1.22995612e+07, 1.31917780e+07, 1.41419449e+07, 1.51531455e+07,
       1.62285590e+07, 1.73714550e+07, 1.85851883e+07, 1.98731915e+07,
       2.12389674e+07, 2.26860792e+07, 2.42181400e+07, 2.58388007e+07,
       2.75517365e+07, 2.93606319e+07, 3.12691642e+07, 3.32809858e+07,
       3.53997052e+07, 3.76288658e+07, 3.99719249e+07, 4.24322298e+07,
       4.50129949e+07, 4.77172759e+07, 5.05479451e+07, 5.35076654e+07,
       5.65988637e+07, 5.98237064e+07, 6.31840724e+07, 6.66815296e+07,
       7.03173106e+07, 7.40922907e+07, 7.80069677e+07, 8.20614427e+07,
       8.62554049e+07, 9.05881177e+07, 9.50584085e+07, 9.96646612e+07,
       1.04404812e+08, 1.09276351e+08, 1.14276321e+08, 1.19401329e+08,
       1.24647555e+08, 1.30010762e+08, 1.35486321e+08, 1.41069224e+08,
       1.46754112e+08, 1.52535299e+08, 1.58406803e+08, 1.64362372e+08,
       1.70395521e+08, 1.76499563e+08, 1.82667644e+08, 1.88892777e+08,
       1.95167880e+08, 2.01485806e+08, 2.07839382e+08, 2.14221437e+08,
       2.20624841e+08, 2.27042529e+08, 2.33467533e+08, 2.39893008e+08,
       2.46312258e+08, 2.52718759e+08, 2.59106178e+08, 2.65468392e+08,
       2.71799505e+08, 2.78093861e+08, 2.84346055e+08, 2.90550945e+08,
       2.96703655e+08, 3.02799584e+08, 3.08834408e+08, 3.14804084e+08,
       3.20704846e+08, 3.26533205e+08, 3.32285952e+08, 3.37960143e+08,
       3.43553105e+08, 3.49062422e+08, 3.54485934e+08, 3.59821726e+08,
       3.65068119e+08, 3.70223666e+08, 3.75287136e+08, 3.80257514e+08,
       3.85133982e+08, 3.89915915e+08, 3.94602869e+08, 3.99194573e+08,
       4.03690918e+08, 4.08091947e+08, 4.12397847e+08, 4.16608938e+08,
       4.20725665e+08, 4.24748591e+08, 4.28678383e+08, 4.32515809e+08,
       4.36261729e+08, 4.39917086e+08, 4.43482897e+08, 4.46960251e+08,
       4.50350299e+08, 4.53654246e+08, 4.56873350e+08, 4.60008909e+08,
       4.63062265e+08, 4.66034788e+08, 4.68927882e+08, 4.71742971e+08,
       4.74481501e+08, 4.77144935e+08, 4.79734745e+08, 4.82252415e+08,
       4.84699433e+08, 4.87077289e+08, 4.89387474e+08, 4.91631475e+08,
       4.93810775e+08, 4.95926849e+08, 4.97981162e+08, 4.99975168e+08,
       5.01910309e+08, 5.03788013e+08, 5.05609691e+08, 5.07376736e+08,
       5.09090527e+08, 5.10752420e+08, 5.12363754e+08, 5.13925844e+08,
       5.15439987e+08, 5.16907457e+08, 5.18329506e+08, 5.19707361e+08,
       5.21042230e+08, 5.22335295e+08, 5.23587715e+08, 5.24800625e+08,
       5.25975137e+08, 5.27112340e+08, 5.28213297e+08, 5.29279049e+08,
       5.30310614e+08, 5.31308985e+08, 5.32275133e+08, 5.33210004e+08,
       5.34114524e+08, 5.34989595e+08, 5.35836096e+08, 5.36654884e+08,
       5.37446796e+08, 5.38212645e+08, 5.38953225e+08, 5.39669309e+08,
       5.40361648e+08, 5.41030974e+08, 5.41678000e+08, 5.42303418e+08,
       5.42907901e+08, 5.43492106e+08, 5.44056670e+08, 5.44602210e+08,
       5.45129330e+08, 5.45638613e+08, 5.46130628e+08, 5.46605926e+08,
       5.47065043e+08, 5.47508498e+08, 5.47936797e+08, 5.48350429e+08,
       5.48749869e+08, 5.49135580e+08, 5.49508008e+08, 5.49867588e+08,
       5.50214740e+08, 5.50549873e+08, 5.50873383e+08, 5.51185653e+08,
       5.51487055e+08, 5.51777950e+08, 5.52058687e+08, 5.52329605e+08,
       5.52591032e+08, 5.52843284e+08, 5.53086671e+08, 5.53321490e+08,
       5.53548029e+08, 5.53766569e+08, 5.53977380e+08, 5.54180723e+08,
       5.54376853e+08, 5.54566016e+08, 5.54748448e+08, 5.54924379e+08,
       5.55094032e+08, 5.55257623e+08, 5.55415360e+08, 5.55567443e+08,
       5.55714069e+08, 5.55855425e+08, 5.55991694e+08, 5.56123052e+08,
       5.56249670e+08, 5.56371713e+08, 5.56489340e+08, 5.56602704e+08,
       5.56711956e+08, 5.56817239e+08, 5.56918692e+08, 5.57016450e+08,
       5.57110643e+08, 5.57201396e+08, 5.57288831e+08, 5.57373065e+08,
       5.57454211e+08, 5.57532379e+08, 5.57607675e+08, 5.57680200e+08,
       5.57750054e+08, 5.57817331e+08, 5.57882124e+08, 5.57944521e+08,
       5.58004609e+08, 5.58062470e+08, 5.58118184e+08, 5.58171828e+08,
       5.58223477e+08, 5.58273203e+08, 5.58321076e+08, 5.58367161e+08,
       5.58411525e+08, 5.58454229e+08, 5.58495334e+08, 5.58534898e+08,
       5.58572976e+08, 5.58609624e+08, 5.58644894e+08, 5.58678835e+08,
       5.58711496e+08, 5.58742925e+08, 5.58773166e+08, 5.58802264e+08,
       5.58830259e+08, 5.58857193e+08, 5.58883106e+08, 5.58908033e+08,
       5.58932013e+08, 5.58955080e+08, 5.58977268e+08, 5.58998610e+08,
       5.59019136e+08, 5.59038878e+08]))    
    D=list(map(int,[0.00000000e+00, 3.37256888e-03, 7.33492260e-03, 1.19848755e-02,
       1.74353641e-02, 2.38166453e-02, 3.12787708e-02, 3.99943634e-02,
       5.01617553e-02, 6.20085237e-02, 7.57954565e-02, 9.18210075e-02,
       1.10426292e-01, 1.32000677e-01, 1.56988027e-01, 1.85893679e-01,
       2.19292213e-01, 2.57836098e-01, 3.02265299e-01, 3.53417941e-01,
       4.12242123e-01, 4.79808981e-01, 5.57327133e-01, 6.46158603e-01,
       7.47836366e-01, 8.64083655e-01, 9.96835157e-01, 1.14826026e+00,
       1.32078855e+00, 1.51713761e+00, 1.74034351e+00, 1.99379393e+00,
       2.28126431e+00, 2.60695714e+00, 2.97554459e+00, 3.39221478e+00,
       3.86272190e+00, 4.39344029e+00, 4.99142293e+00, 5.66446445e+00,
       6.42116897e+00, 7.27102301e+00, 8.22447375e+00, 9.29301292e+00,
       1.04892666e+01, 1.18270911e+01, 1.33216754e+01, 1.49896501e+01,
       1.68492036e+01, 1.89202051e+01, 2.12243359e+01, 2.37852272e+01,
       2.66286069e+01, 2.97824542e+01, 3.32771624e+01, 3.71457106e+01,
       4.14238439e+01, 4.61502628e+01, 5.13668210e+01, 5.71187325e+01,
       6.34547887e+01, 7.04275830e+01, 7.80937464e+01, 8.65141906e+01,
       9.57543608e+01, 1.05884498e+02, 1.16979909e+02, 1.29121246e+02,
       1.42394791e+02, 1.56892754e+02, 1.72713574e+02, 1.89962230e+02,
       2.08750553e+02, 2.29197551e+02, 2.51429738e+02, 2.75581460e+02,
       3.01795237e+02, 3.30222098e+02, 3.61021926e+02, 3.94363793e+02,
       4.30426312e+02, 4.69397972e+02, 5.11477480e+02, 5.56874099e+02,
       6.05807977e+02, 6.58510478e+02, 7.15224499e+02, 7.76204779e+02,
       8.41718209e+02, 9.12044109e+02, 9.87474517e+02, 1.06828664e+03,
       1.15385545e+03, 1.24391592e+03, 1.33861843e+03, 1.43811322e+03,
       1.54255003e+03, 1.65207783e+03, 1.76684440e+03, 1.88699605e+03,
       2.01267720e+03, 2.14403008e+03, 2.28119430e+03, 2.42430656e+03,
       2.57350019e+03, 2.72890488e+03, 2.89064622e+03, 3.05884539e+03,
       3.23361881e+03, 3.41507770e+03, 3.60332785e+03, 3.79846917e+03,
       4.00059543e+03, 4.20979388e+03, 4.42614499e+03, 4.64972210e+03,
       4.88059118e+03, 5.11881054e+03, 5.36443056e+03, 5.61749347e+03,
       5.87803314e+03, 6.14607485e+03, 6.42163511e+03, 6.70472155e+03,
       6.99533270e+03, 7.29345792e+03, 7.59907730e+03, 7.91216157e+03,
       8.23267206e+03, 8.56056064e+03, 8.89576978e+03, 9.23932406e+03,
       9.61021216e+03, 1.00178182e+04, 1.04655873e+04, 1.09572687e+04,
       1.14969410e+04, 1.20890387e+04, 1.27383814e+04, 1.34502054e+04,
       1.42301960e+04, 1.50845243e+04, 1.60198850e+04, 1.70435381e+04,
       1.81633526e+04, 1.93878543e+04, 2.07262759e+04, 2.21886114e+04,
       2.37856739e+04, 2.55291574e+04, 2.74317030e+04, 2.95069689e+04,
       3.17697060e+04, 3.42358373e+04, 3.69225437e+04, 3.98483541e+04,
       4.30332423e+04, 4.64987289e+04, 5.02679906e+04, 5.43659750e+04,
       5.88195232e+04, 6.36574992e+04, 6.89109267e+04, 7.46131343e+04,
       8.07999081e+04, 8.75096529e+04, 9.47835626e+04, 1.02665799e+05,
       1.11203679e+05, 1.20447874e+05, 1.30452614e+05, 1.41275909e+05,
       1.52979769e+05, 1.65630448e+05, 1.79298682e+05, 1.94059954e+05,
       2.09994753e+05, 2.27188850e+05, 2.45733586e+05, 2.65726160e+05,
       2.87269933e+05, 3.10474732e+05, 3.35457168e+05, 3.62340952e+05,
       3.91257217e+05, 4.22344846e+05, 4.55750793e+05, 4.91630410e+05,
       5.30147763e+05, 5.71475945e+05, 6.15797378e+05, 6.63304106e+05,
       7.14198056e+05, 7.68691299e+05, 8.27006270e+05, 8.89375957e+05,
       9.56044066e+05, 1.02726512e+06, 1.10330455e+06, 1.18443867e+06,
       1.27095466e+06, 1.36315040e+06, 1.46133431e+06, 1.56582504e+06,
       1.67695109e+06, 1.79505035e+06, 1.92046946e+06, 2.05356312e+06,
       2.19469330e+06, 2.34422818e+06, 2.50254113e+06, 2.67000941e+06,
       2.84701277e+06, 3.03393196e+06, 3.23114696e+06, 3.43903520e+06,
       3.65796954e+06, 3.88831613e+06, 4.13043224e+06, 4.38466375e+06,
       4.65134280e+06, 4.93078518e+06, 5.22328766e+06, 5.52912542e+06,
       5.84854925e+06, 6.18178299e+06, 6.52902082e+06, 6.89042472e+06,
       7.26612210e+06, 7.65620338e+06, 8.06071999e+06, 8.47968241e+06,
       8.91305851e+06, 9.36077216e+06, 9.82270221e+06, 1.02986817e+07,
       1.07884973e+07, 1.12918896e+07, 1.18085532e+07, 1.23381374e+07,
       1.28802473e+07, 1.34344454e+07, 1.40002532e+07, 1.45771531e+07,
       1.51645916e+07, 1.57619809e+07, 1.63687030e+07, 1.69841118e+07,
       1.76075372e+07, 1.82382882e+07, 1.88756565e+07, 1.95189203e+07,
       2.01673476e+07, 2.08202000e+07, 2.14767361e+07, 2.21362152e+07,
       2.27979003e+07, 2.34610613e+07, 2.41249784e+07, 2.47889441e+07,
       2.54522666e+07, 2.61142717e+07, 2.67743050e+07, 2.74317338e+07,
       2.80859488e+07, 2.87363656e+07, 2.93824257e+07, 3.00235976e+07,
       3.06593776e+07, 3.12892903e+07, 3.19128889e+07, 3.25297553e+07,
       3.31395007e+07, 3.37417646e+07, 3.43362150e+07, 3.49225481e+07,
       3.55004875e+07, 3.60697836e+07, 3.66302132e+07, 3.71815784e+07,
       3.77237057e+07, 3.82564454e+07, 3.87796708e+07, 3.92932765e+07,
       3.97971781e+07, 4.02913112e+07, 4.07756298e+07, 4.12501059e+07,
       4.17147282e+07, 4.21695012e+07, 4.26144442e+07, 4.30495902e+07,
       4.34749854e+07, 4.38906877e+07, 4.42967662e+07, 4.46933003e+07,
       4.50803787e+07, 4.54580988e+07, 4.58265660e+07, 4.61858926e+07,
       4.65361976e+07, 4.68776055e+07, 4.72102461e+07, 4.75342540e+07,
       4.78497673e+07, 4.81569281e+07, 4.84558811e+07, 4.87467737e+07,
       4.90297551e+07, 4.93049766e+07, 4.95725904e+07, 4.98327496e+07,
       5.00856081e+07, 5.03313199e+07, 5.05700390e+07, 5.08019191e+07,
       5.10271135e+07, 5.12457744e+07, 5.14580534e+07, 5.16641007e+07,
       5.18640653e+07, 5.20580947e+07, 5.22463347e+07, 5.24289294e+07,
       5.26060212e+07, 5.27777501e+07, 5.29442545e+07, 5.31056705e+07,
       5.32621320e+07, 5.34137706e+07, 5.35607156e+07, 5.37030940e+07,
       5.38410305e+07, 5.39746472e+07, 5.41040639e+07, 5.42293979e+07,
       5.43507642e+07, 5.44682751e+07, 5.45820407e+07, 5.46921684e+07,
       5.47987634e+07, 5.49019285e+07, 5.50017637e+07, 5.50983671e+07,
       5.51918342e+07, 5.52822581e+07, 5.53697299e+07, 5.54543380e+07,
       5.55361689e+07, 5.56153067e+07, 5.56918333e+07, 5.57658286e+07,
       5.58373703e+07, 5.59065340e+07, 5.59733933e+07, 5.60380198e+07,
       5.61004831e+07, 5.61608510e+07, 5.62191892e+07, 5.62755617e+07,
       5.63300308e+07, 5.63826567e+07, 5.64334983e+07, 5.64826124e+07,
       5.65300544e+07, 5.65758781e+07, 5.66201357e+07, 5.66628776e+07,
       5.67041532e+07, 5.67440099e+07, 5.67824942e+07, 5.68196508e+07,
       5.68555232e+07, 5.68901536e+07, 5.69235829e+07, 5.69558508e+07,
       5.69869957e+07, 5.70170549e+07, 5.70460644e+07, 5.70740592e+07,
       5.71010733e+07, 5.71271394e+07, 5.71522893e+07, 5.71765539e+07,
       5.71999630e+07, 5.72225455e+07, 5.72443292e+07, 5.72653414e+07,
       5.72856082e+07, 5.73051550e+07, 5.73240062e+07, 5.73421858e+07,
       5.73597167e+07, 5.73766211e+07, 5.73929205e+07, 5.74086358e+07,
       5.74237871e+07, 5.74383939e+07, 5.74524750e+07, 5.74660487e+07,
       5.74791326e+07, 5.74917437e+07, 5.75038984e+07, 5.75156128e+07,
       5.75269021e+07, 5.75377814e+07, 5.75482649e+07, 5.75583665e+07,
       5.75680998e+07, 5.75774776e+07, 5.75865125e+07, 5.75952167e+07,
       5.76036018e+07, 5.76116792e+07, 5.76194597e+07, 5.76269540e+07,
       5.76341722e+07, 5.76411242e+07, 5.76478195e+07, 5.76542672e+07,
       5.76604763e+07, 5.76664552e+07, 5.76722123e+07, 5.76777556e+07,
       5.76830926e+07, 5.76882310e+07, 5.76931778e+07, 5.76979400e+07,
       5.77025242e+07, 5.77069370e+07, 5.77111845e+07, 5.77152728e+07,
       5.77192076e+07, 5.77229945e+07, 5.77266390e+07, 5.77301463e+07,
       5.77335213e+07, 5.77367689e+07, 5.77398938e+07, 5.77429006e+07,
       5.77457934e+07, 5.77485766e+07, 5.77512542e+07, 5.77538301e+07,
       5.77563080e+07, 5.77586916e+07, 5.77609844e+07, 5.77631897e+07,
       5.77653107e+07, 5.77673507e+07]))
    i=list(I)[:DaysElapsed]    
    r=list(R)[:DaysElapsed]
    d=list(D)[:DaysElapsed]
    return [i,r,d,I[DaysElapsed:DaysElapsed+10],R[DaysElapsed:DaysElapsed+10],D[DaysElapsed:DaysElapsed+10]]
'''
Code for plots

from bokeh.plotting import figure, output_file, show
from bokeh.models import HoverTool,ColumnDataSource
from bokeh.models.formatters import DatetimeTickFormatter
from bokeh.layouts import column
output_file("datetime.html")
dates=[nptodt(x) for x in np.arange(stdate,stdate+len(S))]
data={'x':t,'Sus':S, 'Inf':I, 'Rec': R, 'Dec':D,'dates':dates}
source=ColumnDataSource(data=data)
# create a new plot with a datetime axis type
fig = figure(plot_height=300, x_axis_type="datetime",
             tools="wheel_zoom,box_zoom,reset,save")

plt1=fig.line(x='x',y='Sus', color='orange', alpha=1,source=source)
fig.add_tools(HoverTool(renderers=[plt1],tooltips=[("Date","@dates"),("Susceptible", "@Sus")]))
plt2=fig.line(x='x',y='Inf', color='red', alpha=1,source=source)
fig.add_tools(HoverTool(renderers=[plt2],tooltips=[("Date","@dates"),("Infected", "@Inf")]))
plt3=fig.line(x='x',y='Rec', color='green', alpha=1,source=source)
fig.add_tools(HoverTool(renderers=[plt3],tooltips=[("Date","@dates"),("Recovered", "@Rec")]))
plt4=fig.line(x='x',y='Dec', color='gray', alpha=1,source=source)
fig.add_tools(HoverTool(renderers=[plt4],tooltips=[("Date","@dates"),("Deceased", "@Dec")]))

show(column(fig,sizing_mode="stretch_width"))

print(I[-1],R[-1],D[-1])

conf=np.array(df['totalconfirmed']).astype(np.float64)
rec=np.array(df['totalrecovered']).astype(np.float64)
dec=np.array(df['totaldeceased']).astype(np.float64)
act=conf-rec-dec

act=list(act)
conf=list(conf)
rec=list(rec)

dates=[nptodt(x) for x in np.arange(stdate,enddate)]
x=np.arange(stdate,enddate)

data={'x':x,'dates':dates,'actualact':act,'predact':I[:len(act)]}
source=ColumnDataSource(data=data)
# create a new plot with a datetime axis type
fig = figure(plot_height=300, x_axis_type="datetime",title='Active Cases',
             tools="wheel_zoom,box_zoom,reset,save")

plt1=fig.line(x='x',y='actualact', color='blue', alpha=1,source=source,legend_label='Actual')
fig.add_tools(HoverTool(renderers=[plt1],tooltips=[("Date","@dates"),("Actual", "@actualact")]))
plt2=fig.line(x='x',y='predact', color='orange', alpha=1,source=source,legend_label='Predicted')
fig.add_tools(HoverTool(renderers=[plt2],tooltips=[("Date","@dates"),("Predicted", "@predact")]))

fig.legend.location = "top_left"
fig.legend.click_policy="hide"
fig.xaxis.formatter=DatetimeTickFormatter(days=["%b %d"])

data1={'x':x,'dates':dates,'actualrec':rec,'predrec':R[:len(rec)]}
source1=ColumnDataSource(data=data1)
# create a new plot with a datetime axis type
fig1 = figure(plot_height=300, x_axis_type="datetime",title='Recovered Cases',
             tools="wheel_zoom,box_zoom,reset,save")

plt1=fig1.line(x='x',y='actualrec', color='blue', alpha=1,source=source1,legend_label='Actual')
fig1.add_tools(HoverTool(renderers=[plt1],tooltips=[("Date","@dates"),("Actual", "@actualrec")]))
plt2=fig1.line(x='x',y='predrec', color='orange', alpha=1,source=source1,legend_label='Predicted')
fig1.add_tools(HoverTool(renderers=[plt2],tooltips=[("Date","@dates"),("Predicted", "@predrec")]))

fig1.legend.location = "top_left"
fig1.legend.click_policy="hide"
fig1.xaxis.formatter=DatetimeTickFormatter(days=["%b %d"])

data2={'x':x,'dates':dates,'actualdec':dec,'preddec':D[:len(dec)]}
source2=ColumnDataSource(data=data2)
# create a new plot with a datetime axis type
fig2 = figure(plot_height=300, x_axis_type="datetime",title='Deceased Cases',
             tools="wheel_zoom,box_zoom,reset,save")

plt1=fig2.line(x='x',y='actualdec', color='blue', alpha=1,source=source2,legend_label='Actual')
fig2.add_tools(HoverTool(renderers=[plt1],tooltips=[("Date","@dates"),("Actual", "@actualdec")]))
plt2=fig2.line(x='x',y='preddec', color='orange', alpha=1,source=source2,legend_label='Predicted')
fig2.add_tools(HoverTool(renderers=[plt2],tooltips=[("Date","@dates"),("Predicted", "@preddec")]))

fig2.legend.location = "top_left"
fig2.legend.click_policy="hide"
fig2.xaxis.formatter=DatetimeTickFormatter(days=["%b %d"])

show(column(fig,fig1,fig2,sizing_mode="stretch_width"))

for i in range(1,11):
    print(act[DaysElapsed-i],I[DaysElapsed-i])
print()
for i in range(1,11):
    print(rec[DaysElapsed-i],R[DaysElapsed-i])
print()  
for i in range(1,11):
    print(dec[DaysElapsed-i],D[DaysElapsed-i])'''
